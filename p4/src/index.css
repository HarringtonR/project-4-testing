*{
  margin: 0 auto;
  max-width: 800px;
}
.App{
  display: flex;
  flex-direction: column;
  justify-content: center;
  height: 100vh;
}
.title{
  display: flex;
  position: absolute;
  justify-content: space-between;
  color: white;
  width: 600px;
  background: rgba(255, 255, 255, 0.0)
}
button{
  color:white;
  margin: 0;
  width: 5rem;
  height: 2rem;
  opacity: 1;
  background: rgba(255, 255, 255, 0.0);
  border: none;
}
a{
  color: white;
  text-decoration: none;
  background: rgba(255, 255, 255, 0.0);
  border: none;
}



h1{
  color: white;
}

video{
     object-fit: contain;
     width: 100%;
     height: 100%;
     margin: auto;
     justify-content: center;
     align-self: center;
   }

.StyledUIContainer {
    display: flex;

}

.StyledMainContainer{
  margin: 0 auto;
   display: flex;


}
.local{
  margin: 0;
  position: absolute;
  width: 10%;
  top: 8vh;
  left: 30vw;
  border: 1px solid white;
}
.local video{
  margin: 0;

}

.remote{
  margin: 0 auto;
}

/*CHATROOM*/
.chat{
  position: absolute;
  top: 65vh;
  background-color: rgba(255, 255, 255, 0.0);
}
.StyledChatContainer{
  flex: 1;
  overflow-y: auto;
  margin: 0 auto;
  width: 600px;
  max-height: 30vh;
  position: absolute;

}
.StyledChatInputContainer{
  margin-top: 30vh;
  padding: 5px;
  border-top: 0px solid grey;
}
.StyledChatListContainer{
  flex: 1;
  overflow-y: auto;
  margin-bottom: 10px;

}

.StyledMessageGroup{
    padding: 0 10px;

}

.StyledMessageMetadata{
  margin: 0;
  margin-bottom: 5px;
  display: flex;
  justify-content: space-between;
  align-items: center;
}


.StyledDisplayName {
  font-weight: bold;
}

.StyledMessage{
  color: white;
}

textarea{
  background-color: rgba(255, 255, 255, 0.0);
  border:none;
  border-top: 1px solid white;
  width: 30vw;
  resize: none;
  color: white;
}

/*.StyledVideoContainer{
    width: 100%;
    height: 100%;
    margin: auto;
    align-self: center;
  }*/





/*
                          <GridLayout
                            className='videogrid'
                            items={[...localVideos, ...remoteVideos]}
                            renderCell={(item) => (<Video media={item} />)}
                          />

                          */
